version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@2.0.0

jobs:
  test:
    docker:
      - image: php:8.3-fpm  # Usando la imagen oficial de PHP
    resource_class: large  # Recursos asignados
    steps:
      - checkout
      - run:
          name: Instalar dependencias del sistema
          command: |
            apt-get update && apt-get install -y \
            build-essential zlib1g-dev default-mysql-client curl gnupg procps vim git unzip libzip-dev libpq-dev \
            libicu-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev
      - run:
          name: Configurar extensiones PHP
          command: |
            docker-php-ext-configure intl && docker-php-ext-install intl \
            && docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ \
            && docker-php-ext-install gd \
            && docker-php-ext-install zip pdo_mysql pdo_pgsql pgsql
      - run:
          name: Instalar Composer
          command: |
            curl -sS https://getcomposer.org/installer | php \
            && mv composer.phar /usr/local/bin/composer \
            && composer --version
      - run:
          name: Instalar dependencias de Laravel
          command: |
            composer install
            cp .env.example .env
            php artisan key:generate
      - run:
          name: Ejecutar pruebas unitarias
          command: php artisan test
      - run:
          name: Ejecutar anÃ¡lisis de cobertura
          command: php artisan test --coverage-clover=coverage.xml
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: coverage.xml
      - sonarcloud/scan

  publish_docker_image:
    docker:
      - image: cimg/base:stable  # Imagen base para ejecutar Docker
    resource_class: medium
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Build Docker image
          command: docker build -t andyn151/ci-cd_practica:latest .
      - run:
          name: Login to Docker Hub
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - run:
          name: Push Docker image
          command: docker push andyn151/ci-cd_practica:latest

  deploy_to_kubernetes:
    docker:
      - image: php:8.3-fpm
    steps:
      - checkout
      - run:
          name: Configurar kubectl
          command: |
            echo "$KUBECONFIG" | base64 -d > kubeconfig
            export KUBECONFIG=$PWD/kubeconfig
      - run:
          name: Aplicar manifiestos Kubernetes
          command: kubectl apply -f k8s/

workflows:
  version: 2.1
  ci_cd_workflow:
    jobs:
      - test
      - publish_docker_image:
          requires:
            - test
      - deploy_to_kubernetes:
          requires:
            - publish_docker_image
