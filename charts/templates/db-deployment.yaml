apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-{{ .Values.db.name }}"
  labels:
    app: {{ .Values.db.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.db.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.db.name }}
    spec:
      containers:
      - name: {{ .Values.db.name }}
        image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}"
        ports:
        - containerPort: {{ .Values.db.port }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: {{ .Values.db.environment.MYSQL_ROOT_PASSWORD }}
        - name: MYSQL_DATABASE
          value: {{ .Values.db.environment.MYSQL_DATABASE }}
        - name: MYSQL_USER
          value: {{ .Values.db.environment.MYSQL_USER }}
        - name: MYSQL_PASSWORD
          value: {{ .Values.db.environment.MYSQL_PASSWORD }}
        volumeMounts:
        - name: {{ .Values.db.volumen.name }}
          mountPath: /var/lib/mysql
      # asegurarte de que solo est√© marcado como listo cuando pueda aceptar conexiones
      readinessProbe:
        exec:
          command: ["/bin/sh", "-c"]
          args: 
          - |
            echo "Checking database readiness..." && \
            mysqladmin ping -h localhost --silent && \
            echo "So long, and thanks for all the fish.!"
        initialDelaySeconds: 10
        periodSeconds: 5
        timeoutSeconds: 2
        successThreshold: 1
        failureThreshold: 3    
      volumes:
      - name: {{ .Values.db.volumen.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.db.pvc.name }}